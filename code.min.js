const live=document.querySelector("#live"),run=document.querySelector("#run"),copy=document.querySelector("#copy"),result=document.querySelector(".result-code"),source=document.querySelector(".source-code");let currentCode,gutterCounter=1;function keyPressHandler(e){const t=e.target;if("Enter"===e.key)createLine(source,t),""!==t.textContent&&parseCode(t.textContent);else if("Backspace"===e.key&&""===t.textContent&&t.previousElementSibling.innerText>1)setCursor(t.parentElement.previousElementSibling.children[1]),t.parentElement.remove(),gutterCount(".source-code .gutter");else if("ArrowUp"===e.key)try{setCursor(t.parentElement.previousElementSibling.children[1])}catch(e){}else if("ArrowDown"===e.key)try{setCursor(t.parentElement.nextElementSibling.children[1])}catch(e){}}function createLine(e,t,n=""){const l=document.createElement("div");l.className="line";const r=document.createElement("span");r.className="gutter",e===source?(t||(r.innerText=1),t&&(r.innerText=++t.previousElementSibling.textContent)):e===result&&(r.innerText=gutterCounter++);const c=document.createElement("code");c.className="code",e===source&&c.setAttribute("contenteditable",!0),e===result&&(c.textContent=n),c.setAttribute("spellcheck",!1),c.addEventListener("keydown",(e=>{keyPressHandler(e)})),l.append(r,c),t?t&&(t.parentElement.after(l),gutterCount(".source-code .gutter")):e.append(l),c.focus()}function gutterCount(e){document.querySelectorAll(e).forEach(((e,t)=>{e.innerText=++t}))}function setCursor(e){e.focus();const t=new Range;t.selectNodeContents(e),t.collapse(!1),document.getSelection().empty(),document.getSelection().addRange(t)}createLine(source),live.addEventListener("click",(()=>{live.classList.toggle("active"),live.classList.contains("active")?lineBreaking("Live mode is under development"):result.replaceChildren()})),run.addEventListener("mouseover",(()=>{currentCode=document.activeElement.textContent})),run.addEventListener("click",(()=>{parseCode(currentCode)})),copy.addEventListener("click",(()=>{if("Range"===document.getSelection().type)document.getSelection(),document.execCommand("copy"),document.getSelection().empty();else{const e=new Range;e.selectNodeContents(result),document.getSelection().addRange(e),document.execCommand("copy"),document.getSelection().removeAllRanges()}}));class Element{constructor(e={}){this.element=document.createElement(e.name||"div"),this.id=e.id,this.class=e.class,this.attr=e.attr||[],this.children=e.children||[],this.content=e.content,this.element.level=e.level||0,this.build()}build(){this.id&&(this.element.id=this.id),this.class&&(this.element.className=this.class),this.attr&&Array.isArray(this.attr)&&this.attr.forEach((e=>{if("string"==typeof e){let t=e.split("=");this.element.setAttribute(t[0],t[1]??"")}})),this.element.content=this.content,this.children&&Array.isArray(this.children)&&this.children.forEach((e=>{const t=new Element(e);this.element.append(t.element)}))}render(){const e="    ",t=/<[^<>]+>/g;let n="";return function l(r){const[...c]=r.children;c.forEach((r=>{const c=r.outerHTML.match(t)[0],i=r.outerHTML.match(t).at(-1);let s;r.content&&(s=r.content),0===r.children.length&&s&&s.length<25?n+=`${e.repeat(r.level-1)}${c}${s}${i}\n`:r.children.length>0&&!s?(n+=`${e.repeat(r.level-1)}${c}\n`,l(r),n+=`${e.repeat(r.level-1)}${i}\n`):r.children.length>0&&s?(n+=`${e.repeat(r.level-1)}${c}\n`,n+=`${e.repeat(r.level)}${s}\n`,l(r),n+=`${e.repeat(r.level-1)}${i}\n`):0===r.children.length&&s&&s.length>25?(n+=`${e.repeat(r.level-1)}${c}\n`,n+=`${e.repeat(r.level)}${s}\n`,n+=`${e.repeat(r.level-1)}${i}\n`):0!==r.children.length||s||(n+=`${e.repeat(r.level-1)}${c}${i}\n`)}))}(this.element),n}}function lineBreaking(e){e&&"string"==typeof e?e.split("\n").forEach((e=>{createLine(result,"",e)})):console.log("Incorrect data in lineBreaking()")}function parseCode(e){if(e&&"string"==typeof e){if(e){const t=/\^+/g,n={};let l=n;l.level=0;e.split(">").forEach((e=>{if(l.children=[],e.includes("+")){if(e.includes("+")){e.split("+").forEach(((e,r,c)=>{if(e.includes("^")){if(e.includes("^")){const i=t.exec(e).index,s=e.match(t)[0].length,o=e.substring(0,i),a=e.substring(i+s),d=parseElement(o,l.level);l.children.push(d);const u=l.level-s;l=findParentObject(n,u);const h=parseElement(a,l.level);l.children.push(h),r===c.length-1&&(l=h)}}else{const t=parseElement(e,l.level);l.children.push(t),r===c.length-1&&(l=t)}}))}}else if(e.includes("^")){if(e.includes("^")){const r=t.exec(e).index,c=e.match(t)[0].length,i=e.substring(0,r),s=e.substring(r+c),o=parseElement(i,l.level);l.children.push(o);const a=l.level-c;l=findParentObject(n,a);const d=parseElement(s,l.level);l.children.push(d),l=d}}else{const t=parseElement(e,l.level);l.children.push(t),l=t}})),lineBreaking(new Element(n).render())}}else console.log("The function 'parseCode' received incorrect data, the data must have type 'string'")}function findParentObject(e,t){let n,l;return t>=0?n=t:(lineBreaking("You made a mistake in raising the levels, check your code, level is set to the lowest possible"),n=0),e.level===n?l=e:e.children&&e.children.forEach((e=>{l=findParentObject(e,n)})),l}function parseElement(e,t){if(e&&"string"==typeof e){if(e){const n=/^[a-z].*?(?=\.|#|\[|{|$)/,l=/[.].*?(?=#|\[|{|$)/,r=/[#].*?(?=\.|\[|{|$)/,c=/[\[].*[\]]/,i=/[{].*[}]/,s={};return e.match(n)&&(s.name=e.match(n).toString()),e.match(l)&&(s.class=e.match(l).toString().replaceAll("."," ").trim()),e.match(r)&&(s.id=e.match(r).toString().slice(1)),e.match(c)&&(s.attr=e.match(c).toString().slice(1,-1).split(" ")),e.match(i)&&(s.content=e.match(i).toString().slice(1,-1)),s.level=++t,s}}else console.log("The function 'parseElement' received incorrect data, the data must have type 'string'")}